digraph  {
main;
Table;
deal_cards;
play_all;
print_underline;
print;
format;
len;
__init__;
Player;
Hand;
Deck;
shuffle;
setup_hands;
show_hand;
play_once;
count_round;
Pot;
drop_card;
drop_bonus;
reward;
show_winner;
finished;
sum;
bool;
add_card;
take_top;
add_bonus;
give_cards;
add_all;
__str__;
join;
map;
append;
pop;
extend;
has_cards;
Card;
value;
index;
winner;
show_pot;
max;
count;
zip;
tied;
__main__;
main -> Table;
main -> deal_cards;
main -> play_all;
deal_cards -> shuffle;
deal_cards -> setup_hands;
deal_cards -> show_hand;
play_all -> play_once;
play_all -> show_winner;
print_underline -> print;
print_underline -> format;
print_underline -> len;
__init__ -> Player;
__init__ -> Hand;
__init__ -> Deck;
__init__ -> Card;
shuffle -> shuffle;
setup_hands -> len;
setup_hands -> add_card;
setup_hands -> pop;
show_hand -> print;
play_once -> count_round;
play_once -> Pot;
play_once -> drop_card;
play_once -> drop_bonus;
play_once -> reward;
play_once -> play_once;
count_round -> print_underline;
count_round -> format;
drop_card -> add_card;
drop_card -> take_top;
drop_bonus -> add_bonus;
reward -> give_cards;
show_winner -> print;
finished -> sum;
finished -> bool;
add_card -> append;
take_top -> pop;
add_bonus -> extend;
give_cards -> add_all;
add_all -> extend;
__str__ -> join;
__str__ -> map;
__str__ -> format;
has_cards -> bool;
value -> index;
winner -> show_pot;
winner -> max;
winner -> count;
winner -> index;
show_pot -> zip;
show_pot -> print;
show_pot -> format;
tied -> zip;
__main__ -> main;
}
