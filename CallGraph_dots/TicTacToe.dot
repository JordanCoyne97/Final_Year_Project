strict digraph  {
draw;
print;
format;
place;
BadInputError;
clear;
fieldReport;
returnDoubles;
checkWin;
checkEntry;
upper;
buildString;
len;
range;
blankSpaces;
setName;
str;
title;
setSymbol;
win;
matchWin;
resetMatch;
getSymbol;
getName;
getIdentity;
getScore;
getMatches;
mapCoordinates;
analyzeMap;
defineStrategy;
decideTactic;
choice;
clearStrategy;
counter;
popitem;
debug;
trapSimulation;
ticBoard;
offensiveStrategy;
defensiveStrategy;
think;
nextTurn;
index;
mainMenu;
input;
singlePlayer;
gameplay;
multiPlayer;
player;
computer;
remove;
list;
keys;
append;
TicTacToe;
Module;
LogicError;
debugger;
draw -> print;
draw -> format;
place -> BadInputError;
place -> format;
checkWin -> fieldReport;
checkEntry -> upper;
buildString -> len;
buildString -> print;
buildString -> range;
setName -> len;
setName -> str;
setName -> title;
setSymbol -> upper;
decideTactic -> choice;
counter -> popitem;
counter -> analyzeMap;
counter -> mapCoordinates;
counter -> debug;
debug -> print;
trapSimulation -> ticBoard;
trapSimulation -> place;
trapSimulation -> getSymbol;
trapSimulation -> returnDoubles;
trapSimulation -> fieldReport;
trapSimulation -> len;
trapSimulation -> debug;
ticBoard -> draw;
ticBoard -> place;
ticBoard -> clear;
ticBoard -> fieldReport;
ticBoard -> returnDoubles;
ticBoard -> checkWin;
ticBoard -> checkEntry;
ticBoard -> buildString;
ticBoard -> blankSpaces;
offensiveStrategy -> len;
offensiveStrategy -> blankSpaces;
offensiveStrategy -> debug;
offensiveStrategy -> choice;
defensiveStrategy -> debug;
defensiveStrategy -> len;
defensiveStrategy -> blankSpaces;
defensiveStrategy -> fieldReport;
defensiveStrategy -> choice;
think -> fieldReport;
think -> returnDoubles;
think -> blankSpaces;
think -> counter;
think -> trapSimulation;
think -> len;
think -> decideTactic;
think -> offensiveStrategy;
think -> defensiveStrategy;
think -> debug;
think -> choice;
nextTurn -> index;
nextTurn -> len;
mainMenu -> print;
mainMenu -> str;
mainMenu -> input;
mainMenu -> singlePlayer;
mainMenu -> gameplay;
mainMenu -> multiPlayer;
mainMenu -> BadInputError;
singlePlayer -> player;
singlePlayer -> print;
singlePlayer -> str;
singlePlayer -> input;
singlePlayer -> setName;
singlePlayer -> setSymbol;
singlePlayer -> computer;
gameplay -> print;
gameplay -> format;
gameplay -> getName;
gameplay -> ticBoard;
gameplay -> list;
gameplay -> keys;
gameplay -> choice;
gameplay -> draw;
gameplay -> upper;
gameplay -> str;
gameplay -> input;
gameplay -> checkEntry;
gameplay -> think;
gameplay -> place;
gameplay -> getSymbol;
gameplay -> append;
gameplay -> checkWin;
gameplay -> nextTurn;
gameplay -> getMatches;
gameplay -> win;
gameplay -> resetMatch;
gameplay -> matchWin;
gameplay -> clearStrategy;
gameplay -> clear;
gameplay -> len;
gameplay -> blankSpaces;
gameplay -> getScore;
multiPlayer -> player;
multiPlayer -> print;
multiPlayer -> str;
multiPlayer -> input;
multiPlayer -> setName;
multiPlayer -> setSymbol;
multiPlayer -> remove;
multiPlayer -> upper;
player -> setName;
player -> setSymbol;
player -> win;
player -> matchWin;
player -> resetMatch;
player -> getSymbol;
player -> getName;
player -> getIdentity;
player -> getScore;
player -> getMatches;
computer -> mapCoordinates;
computer -> analyzeMap;
computer -> defineStrategy;
computer -> decideTactic;
computer -> clearStrategy;
computer -> counter;
computer -> trapSimulation;
computer -> offensiveStrategy;
computer -> defensiveStrategy;
computer -> think;
TicTacToe -> print;
TicTacToe -> str;
TicTacToe -> input;
TicTacToe -> singlePlayer;
TicTacToe -> gameplay;
TicTacToe -> multiPlayer;
TicTacToe -> BadInputError;
TicTacToe -> player;
TicTacToe -> setName;
TicTacToe -> setSymbol;
TicTacToe -> computer;
TicTacToe -> remove;
TicTacToe -> upper;
TicTacToe -> format;
TicTacToe -> getName;
TicTacToe -> ticBoard;
TicTacToe -> list;
TicTacToe -> keys;
TicTacToe -> choice;
TicTacToe -> draw;
TicTacToe -> checkEntry;
TicTacToe -> think;
TicTacToe -> place;
TicTacToe -> getSymbol;
TicTacToe -> append;
TicTacToe -> checkWin;
TicTacToe -> nextTurn;
TicTacToe -> getMatches;
TicTacToe -> win;
TicTacToe -> resetMatch;
TicTacToe -> matchWin;
TicTacToe -> clearStrategy;
TicTacToe -> clear;
TicTacToe -> len;
TicTacToe -> blankSpaces;
TicTacToe -> getScore;
TicTacToe -> mainMenu;
Module -> BadInputError;
Module -> LogicError;
Module -> ticBoard;
Module -> player;
Module -> computer;
Module -> debugger;
}
