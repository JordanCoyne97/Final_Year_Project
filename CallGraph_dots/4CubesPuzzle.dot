digraph  {
name;
__eq__;
__hash__;
hash;
clone;
Cube;
__str__;
getCombinations;
set;
add;
len;
randint;
rotateLeft;
rotateRight;
rotateTop;
rotateBottom;
isValidState;
calculate;
print;
main;
CubesChecker;
Module;
"Color.__init__";
"Cube.__init__";
"CubesChecker.__init__";
__hash__ -> hash;
clone -> Cube;
__str__ -> name;
getCombinations -> set;
getCombinations -> add;
getCombinations -> clone;
getCombinations -> len;
getCombinations -> randint;
getCombinations -> rotateLeft;
getCombinations -> rotateRight;
getCombinations -> rotateTop;
getCombinations -> rotateBottom;
isValidState -> set;
isValidState -> add;
isValidState -> len;
calculate -> len;
calculate -> isValidState;
calculate -> print;
calculate -> getCombinations;
calculate -> calculate;
main -> Cube;
main -> CubesChecker;
main -> calculate;
Module -> "Color.__init__";
Module -> "Cube.__init__";
Module -> "CubesChecker.__init__";
Module -> main;
"Color.__init__" -> name;
"Cube.__init__" -> __eq__;
"Cube.__init__" -> __hash__;
"Cube.__init__" -> clone;
"Cube.__init__" -> __str__;
"Cube.__init__" -> getCombinations;
"Cube.__init__" -> rotateLeft;
"Cube.__init__" -> rotateRight;
"Cube.__init__" -> rotateTop;
"Cube.__init__" -> rotateBottom;
"CubesChecker.__init__" -> isValidState;
"CubesChecker.__init__" -> calculate;
}
