digraph  {
__init__;
inverse;
pow;
point;
to_hash;
digest;
sha512;
from_bytes;
to_bytes;
as_key;
secret_key;
urandom;
public_key;
outer;
point_to_bytes;
sign;
verify;
bytes_to_point;
inner;
recover;
Point;
is_on_curve;
hexit;
join;
format;
reversed;
__main__;
Ed25519;
encode;
run;
print;
__init__ -> inverse;
__init__ -> pow;
__init__ -> point;
inverse -> pow;
point -> Point;
point -> recover;
to_hash -> digest;
to_hash -> sha512;
from_bytes -> from_bytes;
to_bytes -> to_bytes;
as_key -> from_bytes;
secret_key -> urandom;
secret_key -> to_hash;
secret_key -> as_key;
secret_key -> to_bytes;
public_key -> to_hash;
public_key -> as_key;
public_key -> outer;
public_key -> point_to_bytes;
outer -> Point;
outer -> outer;
outer -> inner;
point_to_bytes -> to_bytes;
sign -> to_hash;
sign -> as_key;
sign -> from_bytes;
sign -> outer;
sign -> point_to_bytes;
sign -> to_bytes;
verify -> to_hash;
verify -> from_bytes;
verify -> outer;
verify -> bytes_to_point;
verify -> inner;
bytes_to_point -> from_bytes;
bytes_to_point -> recover;
bytes_to_point -> Point;
inner -> inverse;
inner -> Point;
recover -> inverse;
recover -> pow;
hexit -> join;
hexit -> format;
hexit -> reversed;
__main__ -> join;
__main__ -> format;
__main__ -> reversed;
__main__ -> Ed25519;
__main__ -> public_key;
__main__ -> hexit;
__main__ -> encode;
__main__ -> sign;
__main__ -> run;
__main__ -> verify;
__main__ -> print;
}
