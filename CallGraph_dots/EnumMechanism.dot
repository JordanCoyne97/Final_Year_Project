strict digraph  {
getInstance;
theClass;
singleton;
getNextId;
enum;
isclass;
Enum;
testSingleton;
assertEqual;
testGetNextId;
assertTrue;
testEnumFunctionWithStringContext;
testEnumFunctionWithClassContext;
Module;
"Enum.__init__";
"EnumTestCase.__init__";
loadTestsFromTestCase;
TestLoader;
run;
TextTestRunner;
getInstance -> theClass;
singleton -> theClass;
enum -> isclass;
enum -> getNextId;
enum -> Enum;
testSingleton -> Enum;
testSingleton -> assertEqual;
testGetNextId -> Enum;
testGetNextId -> getNextId;
testGetNextId -> assertTrue;
testEnumFunctionWithStringContext -> enum;
testEnumFunctionWithStringContext -> assertTrue;
testEnumFunctionWithClassContext -> enum;
testEnumFunctionWithClassContext -> assertTrue;
testEnumFunctionWithClassContext -> assertEqual;
Module -> "Enum.__init__";
Module -> "EnumTestCase.__init__";
Module -> loadTestsFromTestCase;
Module -> TestLoader;
Module -> run;
Module -> TextTestRunner;
"Enum.__init__" -> getNextId;
"EnumTestCase.__init__" -> testSingleton;
"EnumTestCase.__init__" -> testGetNextId;
"EnumTestCase.__init__" -> testEnumFunctionWithStringContext;
"EnumTestCase.__init__" -> testEnumFunctionWithClassContext;
}
